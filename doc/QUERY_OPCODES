$Amigan: fakedbfs/doc/QUERY_OPCODES,v 1.7 2005/12/20 22:38:43 dcp1990 Exp $

Query opcodes
	By Dan Ponte

The fakedbfs query virtual machine is modelled in part on that of the VDBE driver used by SQLite.
Like VDBE, each operation has 3 operands, the first being a signed integer, the second being
unsigned, and the third being a pointer. These are named O1, O2, and O3, respectively.
There is also a stack. All pointers to objects must be dynamically allocated using malloc(3).

After each row, a pointer to the head of a fields_t is pushed to the stack. Pop it off to conserve stack entries. (we use a fixed stack for speed
and effeciency.)

Here is a list of opcodes:
========================================================================================================================================|
OPCODE	|Name		|Description										|Accepts:		|
	|		|											|O1	|O2	|O3	|
========|===============|=======================================================================================|=======|=======|=======|
0x1	|OP_BEGINQ	|Begin query. O1 is true if you will be using OP_SELCN to select columns, false if you 	|X	|	|	|
	|		|want all columns (in this case, all OP_SELCNs will be ignored).			|	|	|	|
0x2	|OP_SETCAT	|Set catalogue name. O3 is a char* to the catalogue name.				|	|	|X	|
0x3	|OP_BEGIN_GRP	|Begin grouping. Akin to an open-parentheses "(". No operands.				|	|	|	|
0x4	|OP_CLOSE_GRP	|Close grouping. Akin to a closed-parentheses ")". No operands.				|	|	|	|
0x5	|OPL_AND	|Logical AND. Like &&. No operands.							|	|	|	|
0x6	|OPL_OR		|Logical OR. Like ||. No operands.							|	|	|	|
0x7	|OPL_NOT	|NOT. Like !. No operands.								|	|	|	|
0x8	|OPL_EQUAL	|Equals. No operands.									|	|	|	|
0x9	|OP_COLNAME	|Column name. O3 is pointer to string containing name of column.			|	|	|X	|
0xA	|OP_STRING	|String. O3 is the string (char*).							|	|	|X	|
0xB	|OP_INT		|Signed int. O1 is the value.								|X	|	|	|
0xC	|OP_UINT	|Unsigned int. O2 is the value.								|	|X	|	|
0xD	|OP_VOID	|Void value. O2 is the size, O3 is a void* pointer to the data.				|	|X	|X	|
0xE	|OP_FLOAT	|Float value. O3 is a pointer to a double.						|	|	|X	|
0xF	|OP_PUSH	|Push operand structure to stack. O3 is pointer to the operand structure.		|	|	|X	|
0x10	|OP_POP		|Pop operand structure from stack. O3 is a pointer to a pointer that will be set.	|	|	|X	|
0x11	|OP_ENDQ	|End query. No operands.								|	|	|	|
0x12	|OP_SELCN	|Select columns. O3 is the name of the column. This is only recognized according to the	|	|	|X	|
	|		|O1 of the OP_BEGINQ; see above for details.						|	|	|	|
0x13	|OP_REGEXP	|Regular expression, implemented using regex(3).  O3 is a pointer to a compiled qreg_t	|	|	|X	|
	|		|structure; see below for more info on this.						|	|	|	|
0x14	|OP_NULL	|NULL. No operands.									|	|	|	|
0x15	|OPL_NEQU	|Not equals. No operands.								|	|	|	|
0x16	|OPL_GTHAN	|Greater than. No operands.								|	|	|	|
0x17	|OPL_LTHAN	|Less than. No operands.								|	|	|	|
0x18	|OPL_GTHEQU	|Greater than or equals. No operands.							|	|	|	|
0x19	|OPL_LTHEQU	|Less than or equals. No operands.							|	|	|	|
========================================================================================================================================|

NOTE AS PROMISED:
	qreg_t structures are compiled by a call to qreg_compile(char *regex, char *colname, int case_insens, char **errmsg). Returned is a pointer to a freshly-malloc(3)'d qreg_t. case_insens is true if case-insensitivity is desired; 0 otherwise. If an error is encountered, NULL is returned and *errmsg is set to a dynamically allocated (free with free(3)) string containing the message.
This structure should be freed when no longer in use by a call to qreg_destroy(qreg_t *qreg) (this might be done for you in a query_destroy call).
Note that the regex nor colname are not needed later; they will be strdup()'d if necessary.
In essence, a OP_REGEXP instruction expands to "(colname =~ /regex/)" in one instruction.

If the used argument to qi() has the US_DYNA (0x8) bit set, o3 will be freed using free(3) when the instruction list is destroyed.
